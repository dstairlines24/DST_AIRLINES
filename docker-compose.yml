# version: '3.3'
services:
  mongodb:
    image: mongo:4.4
    container_name: dstair_mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_LOGIN}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    volumes:
      - ./data:/data/db
    ports:
      - 27017:27017
      
  flask_app:
    image: docker.io/guillaumegossmann/dst_airlines_app:0af9b99f
    container_name: dstair_flask_app
    ports:
      - 5002:5002
    depends_on:
      - mongodb
    volumes:
      - ./model:/app/model  # Volume partagé avec l'hôte
    environment:
      - MONGO_URI=mongodb://${MONGO_ROOT_LOGIN}:${MONGO_ROOT_PASSWORD}@mongodb:27017/app_data?authSource=admin
      #?authSource=admin -> on précise que l'on s'authentifie sur la base admin, car mongo créer les utilisateurs dans admin par défaut
      - FLASK_ADMIN_LOGIN=${FLASK_ADMIN_LOGIN}
      - FLASK_ADMIN_PASSWORD=${FLASK_ADMIN_PASSWORD}
      - FLASK_USER_LOGIN=${FLASK_USER_LOGIN}
      - FLASK_USER_PASSWORD=${FLASK_USER_PASSWORD}
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY}
      - API_KEY=${API_KEY}
    command: python app.py

  flask_app_form:
    image: docker.io/guillaumegossmann/dst_airlines_app_form:latest
    container_name: dstair_flask_app_form
    ports:
      - 5001:5001
    depends_on:
      - mongodb
    environment:
      - MONGO_URI=mongodb://${MONGO_ROOT_LOGIN}:${MONGO_ROOT_PASSWORD}@mongodb:27017/app_data_form?authSource=admin
      #?authSource=admin -> on précise que l'on s'authentifie sur la base admin, car mongo créer les utilisateurs dans admin par défaut
      - FLASK_ADMIN_LOGIN=${FLASK_ADMIN_LOGIN}
      - FLASK_ADMIN_PASSWORD=${FLASK_ADMIN_PASSWORD}
      - FLASK_USER_LOGIN=${FLASK_USER_LOGIN}
      - FLASK_USER_PASSWORD=${FLASK_USER_PASSWORD}
      - FLASK_SECRET_KEY_FORM=${FLASK_SECRET_KEY_FORM}
      - API_KEY=${API_KEY}
      - KEY_AS=${KEY_AS}
      - KEY_VISUALCROSSING=${KEY_VISUALCROSSING}
      - KEY_VISUALCROSSING_2=${KEY_VISUALCROSSING_2}
      - CLIENT_ID_LH=${CLIENT_ID_LH}
      - CLIENT_SECRET_LH=${CLIENT_SECRET_LH}
    command: python app.py

  app_admin:
    image: guillaumegossmann/dst_airlines_app_admin:latest
    container_name: dstair_app_admin
    depends_on:
      - mongodb
    ports:
      - "8888:8888"  # Port pour Jupyter Notebook
      - "8051:8051"  # Port pour Dash
      - "5000:5000"  # Port pour flask
    volumes:
      - ./app_admin/scripts:/app/scripts
      - ./model:/app/model
      - ./data_test:/app/data_test
    environment:
      - MONGO_URI=mongodb://${MONGO_ROOT_LOGIN}:${MONGO_ROOT_PASSWORD}@mongodb:27017/app_data?authSource=admin
      #?authSource=admin -> on précise que l'on s'authentifie sur la base admin, car mongo créer les utilisateurs dans admin par défaut
      - FLASK_ADMIN_LOGIN=${FLASK_ADMIN_LOGIN}
      - FLASK_ADMIN_PASSWORD=${FLASK_ADMIN_PASSWORD}
      - FLASK_USER_LOGIN=${FLASK_USER_LOGIN}
      - FLASK_USER_PASSWORD=${FLASK_USER_PASSWORD}
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY}
      - API_KEY=${API_KEY}
      - KEY_AS=${KEY_AS}
      - KEY_VISUALCROSSING=${KEY_VISUALCROSSING}
      - KEY_VISUALCROSSING_2=${KEY_VISUALCROSSING_2}
      - CLIENT_ID_LH=${CLIENT_ID_LH}
      - CLIENT_SECRET_LH=${CLIENT_SECRET_LH}
    command: ./start.sh